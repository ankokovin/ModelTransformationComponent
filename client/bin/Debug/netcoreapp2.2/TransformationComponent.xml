<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TransformationComponent</name>
    </assembly>
    <members>
        <member name="T:ModelTransformationComponent.AllRules">
            <summary>
            Все структуры
            </summary> 
        </member>
        <member name="F:ModelTransformationComponent.AllRules.rulesPerLanguage">
            <summary>
            Структуры хранятся следующим образом:
            Имя языка : Словарь структур данного языка
            Название структуры : Структура
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.AllRules.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.AllRules"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.AllRules.BaseName">
            <summary>
            Название под базовые правила
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.AllRules.AddLanguageRules(System.String,System.Collections.Generic.Dictionary{System.String,ModelTransformationComponent.Rule})">
            <summary>
            Добавление структур нового языка
            </summary>
            <param name="LanguageName">Название языка</param>
            <param name="LanguageRules">Словарь структур</param>
        </member>
        <member name="M:ModelTransformationComponent.AllRules.AddBaseRules(System.Collections.Generic.Dictionary{System.String,ModelTransformationComponent.Rule})">
            <summary>
            Добавление базовых структур
            </summary>
            <param name="Rules">Словарь базовых структур</param>
        </member>
        <member name="M:ModelTransformationComponent.AllRules.HasLanguage(System.String)">
            <summary>
            Проверка наличия описания языка
            </summary>
            <param name="name">Название языка</param>
            <returns>Есть ли описание данного языка</returns>
        </member>
        <member name="M:ModelTransformationComponent.AllRules.GetRulesForLanguage(System.String)">
            <summary>
            Получение структур для конкретного языка
            </summary>
            <param name="LanguageName">Название языка</param>
            <returns>Словарь структур для данного языка</returns>
        </member>
        <member name="P:ModelTransformationComponent.AllRules.GetBaseRules">
            <summary>
            Получение базовых структур
            </summary>
            <returns>Словарь базовых структур</returns>
        </member>
        <member name="P:ModelTransformationComponent.AllRules.Languages">
            <summary>
            Получение списка введённых языков
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.DependencyGraph">
            <summary>
            Граф зависимостей правил
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.DependencyGraph.BNode">
            <summary>
            Вершина дерева парсинга
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.DependencyGraph.BNode.Parent">
            <summary>
            Родитель вершины
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.DependencyGraph.BNode.Children">
            <summary>
            Дети вершины
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.DependencyGraph.BNode.Value">
            <summary>
            Параметр вершиины
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.DependencyGraph.BNode.RuleName">
            <summary>
            Название правила
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.DependencyGraph.BNode.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name">Название</param>
        </member>
        <member name="P:ModelTransformationComponent.DependencyGraph.BNode.isRef">
            <summary>
            Является ли ссылкой
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.DependencyGraph.Important">
            <summary>
            Регулярное выражение для определения важных значений из вершин правил <see cref="T:ModelTransformationComponent.RegexRule"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.DependencyGraph.rootNode">
            <summary>
            Вершина правила верхнего уровня
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.DependencyGraph.sourceNodes">
            <summary>
            Правила входа
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.DependencyGraph.targetNodes">
            <summary>
            Правила выхода
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.DependencyGraph.#ctor(ModelTransformationComponent.AllRules@,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="allRules">Объект с правилами</param>
            <param name="sourceLang">Исходный язык</param>
            <param name="targetLang">Выходной язык</param>
            <param name="root">Название корневой вершины</param>
        </member>
        <member name="M:ModelTransformationComponent.DependencyGraph.buildTree(System.String@)">
            <summary>
            Построение леса разбора
            </summary>
            <param name="text">Текст входящий</param>
            <returns>Список вершин - корней деревьев разбора</returns>
        </member>
        <member name="M:ModelTransformationComponent.DependencyGraph.toText(System.Collections.Generic.List{ModelTransformationComponent.DependencyGraph.BNode})">
            <summary>
            Функция трансформации леса разбора в текст
            </summary>
            <param name="tree">Список корней деревьев разбора</param>
            <returns>Результат трансформации</returns>
        </member>
        <member name="M:ModelTransformationComponent.DependencyGraph.TransformText(System.String)">
            <summary>
            Трансформация текста исходного языка в текст целевого 
            </summary>
            <param name="text"></param>
            <returns>Результат трансформации</returns>
        </member>
        <member name="T:ModelTransformationComponent.DependencyGraph.Node">
            <summary>
            Вершина правила в графе зависимостей <see cref="T:ModelTransformationComponent.DependencyGraph"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.DependencyGraph.Node.rule">
            <summary>
            Правило
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.DependencyGraph.Node.#ctor(ModelTransformationComponent.Rule,System.Boolean)">
            <summary>
            
            </summary>
            <param name="rule"></param>
            <param name="isBase"></param>
        </member>
        <member name="P:ModelTransformationComponent.DependencyGraph.Node.Parent">
            <summary>
            Правила, которые используют данные
            </summary>
            <value></value>
        </member>
        <member name="P:ModelTransformationComponent.DependencyGraph.Node.Children">
            <summary>
            Правила, которые используются данными
            </summary>
            <value></value>
        </member>
        <member name="P:ModelTransformationComponent.DependencyGraph.Node.fromBase">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:ModelTransformationComponent.DependencyGraph.Node.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ModelTransformationComponent.NoBaseRulesFound">
            <summary>
            Исключение: не было найдено описание трансформаций для языка
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NoBaseRulesFound.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoLanguageRulesFound"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NoBaseRulesFound.#ctor(System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoLanguageRulesFound"/>
            </summary>
            <param name="inner"></param>
        </member>
        <member name="T:ModelTransformationComponent.NoLanguageRulesFound">
            <summary>
            Исключение: не было найдено описание трансформаций для языка
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NoLanguageRulesFound.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoLanguageRulesFound"/>
            </summary>
            <param name="LanguageName">Название языка</param>
        </member>
        <member name="T:ModelTransformationComponent.ConstructAlreadyDefined">
            <summary>
            Конструкция с данным именем уже существует
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.ConstructAlreadyDefined.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.DelTabOverFlow">
            <summary>
            Количество табов стало отрицательным
            <para/>
            Наслежует <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.DelTabOverFlow.FormatString">
            <summary>
            Строка формата сообщения ошибки по-умолчанию
            </summary>
            <value>
            "[{0},{1}] Синтаксическая ошибка: количество табов стало отрицательным"
            </value>
        </member>
        <member name="M:ModelTransformationComponent.DelTabOverFlow.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.DelTabOverFlow"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.DelTabOverFlow.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.DelTabOverFlow"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.DelTabOverFlow.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.DelTabOverFlow"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.DelTabOverFlow.#ctor(System.Int32,System.Int32)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.DelTabOverFlow"/>
            </summary>
            <param name="line"></param>
            <param name="symbol"></param>
        </member>
        <member name="M:ModelTransformationComponent.DelTabOverFlow.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.DelTabOverFlow"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.EndTabGreaterThanZero">
            <summary>
            Количество табов по окончании выше нуля
            <para/>
            Наслежует <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.EndTabGreaterThanZero.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EndTabGreaterThanZero"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.EndTabGreaterThanZero.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EndTabGreaterThanZero"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.EndTabGreaterThanZero.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EndTabGreaterThanZero"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.EndTabGreaterThanZero.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EndTabGreaterThanZero"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.EOSException">
            <summary>
            Ошибка: неожиданный конец входной строки <para/>
            Наследует <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.EOSException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.EOSException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.EOSException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.EOSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.InputIsEmpty">
            <summary>
            Исключение, возникающее когда входная строка пуста
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.InputIsEmpty.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.InputIsEmpty"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.InputIsEmpty.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.InputIsEmpty"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.InputIsEmpty.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.InputIsEmpty"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.InputIsEmpty.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:ModelTransformationComponent.NameSyntaxError">
            <summary>
            Ошибка в названии структуры
            <para/>
            Подвид синтаксической ошибки <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.NameSyntaxError.FormatString">
            <summary>
            Строка формата сообщения ошибки по-умолчанию
            </summary>
            <value>
            "[{0},{1}] Синтаксическая ошибка: ожидалось валидное имя, а получили \"{2}\""
            </value>
        </member>
        <member name="M:ModelTransformationComponent.NameSyntaxError.#ctor(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Ошибка в названии структуры
            </summary>
            <param name="line">Номер строки</param>
            <param name="symbol">Номер символа</param>
            <param name="got">Полученная строка</param>
            <param name="formatString">Строка формата сообщения об ошибке</param>
        </member>
        <member name="M:ModelTransformationComponent.NameSyntaxError.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Ошибка в названии структуры
            </summary>
            <param name="line">Номер строки</param>
            <param name="symbol">Номер символа</param>
            <param name="got">Полученная строка</param>
        </member>
        <member name="M:ModelTransformationComponent.NameSyntaxError.#ctor(System.String)">
            <summary>
            Ошибка в названии структуры
            </summary>
            <param name="got">Полученная строка</param>
        </member>
        <member name="M:ModelTransformationComponent.NameSyntaxError.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.NameSyntaxError.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.NameSyntaxError.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.NoEndDetected">
            <summary>
            Исключение: не был найден символ /end
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NoEndDetected.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoEndDetected"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NoEndDetected.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoEndDetected"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.NoEndDetected.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoEndDetected"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.NoEndDetected.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoEndDetected"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.NoStartDetected">
            <summary>
            Исключение: не был найден символ /start
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NoStartDetected.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoStartDetected"/>
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SyntaxError">
            <summary>
            Синтаксическая ошибка
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxError.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxError.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="innerException">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxError.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxError.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxError.#ctor(System.String,System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
            <param name="expected">Ожидаемая строка</param>
            <param name="got">Полученная строка</param>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxError.Got">
            <summary>
            Полученная информация
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxError.Expected">
            <summary>
            Ожидаемая информация
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SyntaxErrorPlaced">
            <summary>
            Синтаксическая ошибка с указанием номера строки и номера символа
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxErrorPlaced.PlaceFormatString">
            <summary>
            Строка формата расположения ошибки
            </summary>
            <value>
            "[{0},{1}]"
            </value>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxErrorPlaced.FormatString">
            <summary>
            Строка формата сообщения ошибки по-умолчанию
            </summary>
            <value>
            [{0},{1}] Синтаксическая ошибка: ожидалось \"{2}\", а получили \"{3}\"
            </value>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxErrorPlaced.TrimedMsg">
            <summary>
            Сообщение об ошибке без указания номера строки с символа
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="line">Номер строки</param>
            <param name="symbol">Номер символа</param>
            <param name="got">Полученная строка</param>
            <param name="expected">Ожидаемая строка</param>
            <param name="formatString">Строка формата сообщения ошибки</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="line">Номер строки</param>
            <param name="symbol">Номер символа</param>
            <param name="got">Полученная строка</param>
            <param name="expected">Ожидаемая строка</param>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxErrorPlaced.Line">
            <summary>
            Номер строки
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxErrorPlaced.Symbol">
            <summary>
            Номер символа
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.String,System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="got">Полученная строка</param>
            <param name="expected">Ожидаемая строка</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
            <param name="line"></param>
            <param name="symbol"></param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.Int32,System.Int32,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="inner">Внутренняя ошибка</param>
            <param name="line"></param>
            <param name="symbol"></param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.TranslateRuleRequired">
            <summary>
            Требуется переопределение конструкции для целевого языка
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TranslateRuleRequired.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TranslateRuleRequired.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:ModelTransformationComponent.BaseRuleParseException">
            <summary>
            Ошибка парсинга основных правил трансформаций в <see cref="!:TransformationComponent.GetBaseDescription(string)"/>
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BaseRuleParseException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.BaseRuleParseException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BaseRuleParseException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.BaseRuleParseException"/>
            </summary>
            <param name="message">Сообшение</param>
        </member>
        <member name="M:ModelTransformationComponent.BaseRuleParseException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.BaseRuleParseException"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.BaseRuleParseException.#ctor(System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.BaseRuleParseException"/>
            </summary>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.BaseRuleParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.BaseRuleParseException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.LangRuleParseException">
            <summary>
            Ошибка парсинга правил трансформаций конкретного языка в <see cref="!:TransformationComponent.GetLangDescription(string, Dictionary&lt;string, Rule&gt;, out string)"/>
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.LangRuleParseException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.LangRuleParseException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.LangRuleParseException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.LangRuleParseException"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.LangRuleParseException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.LangRuleParseException"/>
            </summary>
            <param name="langName">Название языка</param>
            <param name="inner">Внутреняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.LangRuleParseException.#ctor(System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.LangRuleParseException"/>
            </summary>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.LangRuleParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.LangRuleParseException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.ModelParseException">
            <summary>
            Ошибка парсинга модели в <see cref="M:ModelTransformationComponent.TransformationComponent.Transform(System.String,ModelTransformationComponent.AllRules,System.String,System.String)"/>
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.ModelParseException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.ModelParseException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.ModelParseException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.ModelParseException"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.ModelParseException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.ModelParseException"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.ModelParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.ModelParseException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.RuleParseException">
            <summary>
            Ошибка парсинга правил трансформаций в <see cref="!:TransformationComponent.TransformToRules(string)"/>
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.RuleParseException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.RuleParseException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.RuleParseException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.RuleParseException"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.RuleParseException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.RuleParseException"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.RuleParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.RuleParseException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.TransformComponentException">
            <summary>
            Класс исключений, генерируемых компонентом трансформации моделей <see cref="T:ModelTransformationComponent.TransformationComponent"/>
            <para/>
            Наследует <see cref="T:System.Exception"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TransformComponentException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TransformComponentException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.TransformComponentException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.TransformComponentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.GeneratorState">
            <summary>
            Текущее положение генерации текстового представления модели
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.GeneratorState.TabCount">
            <summary>
            Счётчик табов
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.GeneratorState.Text">
            <summary>
            Текущий текст
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.GeneratorState.AppendText(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:ModelTransformationComponent.IChangeState">
            <summary>
            Интерфейс для правил, которые могут изменять текущее положение генератора и парсера
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.IChangeState.ChangeState(ModelTransformationComponent.GeneratorState@)">
            <summary>
            Изменить положение генератора
            </summary>
            <param name="generatorState"></param>
        </member>
        <member name="M:ModelTransformationComponent.IChangeState.ChangeState(ModelTransformationComponent.ParserState@)">
            <summary>
            Изменить положение парсера
            </summary>
            <param name="parserState"></param>
        </member>
        <member name="T:ModelTransformationComponent.ITransformationComponent">
            <summary>
            Интрефейс компонента трансформации моделей
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.ITransformationComponent.Transform(System.String,System.String,System.String,System.String)">
            <summary>
            Функция трансформации моделей
            </summary>
            <param name="text">Текстовое представление исходной модели</param>
            <param name="rules">Текстовое представление правил трансформации</param>
            <param name="sourceLang">Название исходного языка</param>
            <param name="targetLang">Название целевого языка</param>
            <returns>Результат трансформации - новое текстовое представление</returns>
        </member>
        <member name="M:ModelTransformationComponent.ITransformationComponent.TransformToRules(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="rules"></param>
            <param name="Minimize"/>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.ITransformationComponent.Transform(System.String,ModelTransformationComponent.AllRules,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="rules"></param>
            <param name="sourceLang"></param>
            <param name="targetLang"></param>
            <returns></returns>
        </member>
        <member name="T:ModelTransformationComponent.ParserState">
            <summary>
            Текущее положение парсера
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.ParserState.TabCount">
            <summary>
            Количество символов табуляции
            </summary>
            <value></value>
        </member>
        <member name="T:ModelTransformationComponent.AbstractRuleFactory">
            <summary>
            Абстрактная фабрика конструкций
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.AbstractRuleFactory.CreateRule(System.String,System.Int32@)">
            <summary>
            Создание конструкции
            </summary>
            <param name="text">Текстовое описание конструкции</param>
            <param name="charcnt">Количество символов, использованных для создания</param>
            <returns>Конструкция</returns>
        </member>
        <member name="T:ModelTransformationComponent.BNFRuleFactory">
            <summary>
            Конкретная фабрика BNF конструкций
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.AbstractRuleFactory"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BNFRuleFactory.CreateRule(System.String,System.Int32@)">
            <summary>
            Создание BNF конструкции
            </summary>
            <param name="text">Текстовое описание конструкции</param>
            <param name="charcnt">Количество символов, использованных для создания</param>
            <returns>BNF конструкция</returns>
        </member>
        <member name="T:ModelTransformationComponent.RegRuleFactory">
            <summary>
            Конкретная фабрика структур с представлением в виде регулярных выражений
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.AbstractRuleFactory"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.RegRuleFactory.CreateRule(System.String,System.Int32@)">
            <summary>
            Метод создания структуры с регулярным выражением
            </summary>
            <param name="text">Текстовое представление структуры</param>      
            <param name="charcnt">Количество символов, использованных для создания</param>  
            <exception cref="T:System.ArgumentException">Неожиданная строка</exception>
            <exception cref="T:ModelTransformationComponent.SyntaxError">Синтаксическая ошибка</exception>
            <returns>Структура с представлением в виде регулярного выражения</returns>
        </member>
        <member name="T:ModelTransformationComponent.SystemRuleFactory">
            <summary>
            Конкретная фабрика системных конструкций
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.AbstractRuleFactory"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SystemRuleFactory.CreateRule(System.String,System.Int32@)">
            <summary>
            Создание системной конструкции
            </summary>
            <param name="text">Текстовое описание конструкции</param>
            <param name="charcnt">Количество символов, использованных для создания</param>
            <returns>Системная конструкция</returns>
        </member>
        <member name="T:ModelTransformationComponent.SystemTrieSingleton">
            <summary>
            Префиксное дерево системных правил генерации
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SystemTrieSingleton.Search(System.String,System.Int32@,System.String@)">
            <summary>
            Поиск правила
            </summary>
            <param name="text">Название правила</param>
            <param name="charcnt">Количество найденых символов</param>
            <param name="Suggestion">Возможное название</param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.SystemTrieSingleton.getInstance">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ModelTransformationComponent.Trie`1">
            <summary>
            Бор
            </summary>
            <typeparam name="T">Хранимый тип</typeparam>
        </member>
        <member name="T:ModelTransformationComponent.Trie`1.Node">
            <summary>
            Вершина бора <see cref="T:ModelTransformationComponent.Trie`1"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.Trie`1.Node.Value">
            <summary>
            Символ, по которому зашти из предка
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Trie`1.Node.Result">
            <summary>
            Хранимое значение
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Trie`1.Node.Children">
            <summary>
            Потомки
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Trie`1.Node.Parent">
            <summary>
            Предок
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Trie`1.Node.Depth">
            <summary>
            Глубина обхода - длина строки, соответствующей данной вершине
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.Trie`1.Node.#ctor(System.Int32,ModelTransformationComponent.Trie{`0}.Node,System.Char)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.Trie`1.Node"/>
            </summary>
            <param name="depth">Глубина</param>
            <param name="parent">Предок</param>
            <param name="value">Символ</param>
        </member>
        <member name="M:ModelTransformationComponent.Trie`1.Node.IsLeaf">
            <summary>
            Является ли вершина листом
            </summary>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:ModelTransformationComponent.Trie`1.Node.FindChildNode(System.Char)">
            <summary>
            Поиск потомка с данным символом
            </summary>
            <param name="c">Символ</param>
            <returns>Потомок (null если отсутствует)</returns>
        </member>
        <member name="M:ModelTransformationComponent.Trie`1.Node.DeleteChildNode(System.Char)">
            <summary>
            Удаление потомка
            </summary>
            <param name="c">Символ</param>
        </member>
        <member name="F:ModelTransformationComponent.Trie`1._root">
            <summary>
            Корень бора
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.Trie`1.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.Trie`1"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.Trie`1.Prefix(System.String)">
            <summary>
            Функция поиска наибольшего префикса строки
            </summary>
            <param name="s">Строка</param>
            <returns>Вершина, соответствующая наибольшему префиксу</returns>
        </member>
        <member name="M:ModelTransformationComponent.Trie`1.Insert(`0,System.String)">
            <summary>
            Добавление в бор
            </summary>
            <param name="Item">Хранимый элемент</param>
            <param name="Name">Строка элемента</param>
        </member>
        <member name="M:ModelTransformationComponent.Trie`1.Search(System.String,System.Int32@,System.String@)">
            <summary>
            Поиск элемента, строка которого является наибольшим префиксом данной строки
            </summary>
            <param name="s">Входная строка</param>
            <param name="depth">Полученная длина</param>
            <param name="Suggestion">Предположение</param>
            <returns>Найденный элемент (default если не найден)</returns>
        </member>
        <member name="T:ModelTransformationComponent.TypeRuleFactory">
            <summary>
            Конкретная фабрика type конструкций
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.AbstractRuleFactory"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TypeRuleFactory.CreateRule(System.String,System.Int32@)">
            <summary>
            Создание type конструкции
            </summary>
            <param name="text">Текстовое описание конструкции</param>
            <param name="charcnt">Количество символов, использованных для создания</param>
            <returns>type конструкция</returns>
        </member>
        <member name="T:ModelTransformationComponent.BNFRule">
            <summary>
            БНФ правило
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="F:ModelTransformationComponent.BNFRule.OrSplits">
            <summary>
            
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.BNFRule.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.BNFRule.IsReadOnly">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ModelTransformationComponent.BNFRule.Item(System.Int32)">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ModelTransformationComponent.BNFRule.SelfReferenced">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.Add(ModelTransformationComponent.BasicBNFRule)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.Contains(ModelTransformationComponent.BasicBNFRule)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.CopyTo(ModelTransformationComponent.BasicBNFRule[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.Remove(ModelTransformationComponent.BasicBNFRule)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.IndexOf(ModelTransformationComponent.BasicBNFRule)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.Insert(System.Int32,ModelTransformationComponent.BasicBNFRule)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:ModelTransformationComponent.BNFRule.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:ModelTransformationComponent.BasicBNFRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.BasicBNFRule.Count">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ModelTransformationComponent.BasicBNFRule.IsReadOnly">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ModelTransformationComponent.BasicBNFRule.Item(System.Int32)">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.Add(ModelTransformationComponent.BNFSimpleElement)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.Contains(ModelTransformationComponent.BNFSimpleElement)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.CopyTo(ModelTransformationComponent.BNFSimpleElement[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.Remove(ModelTransformationComponent.BNFSimpleElement)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.IndexOf(ModelTransformationComponent.BNFSimpleElement)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.Insert(System.Int32,ModelTransformationComponent.BNFSimpleElement)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:ModelTransformationComponent.BasicBNFRule.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:ModelTransformationComponent.BNFReference">
            <summary>
            Ссылка на правило
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.BNFSimpleElement"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.BNFReference.Name">
            <summary>
            Название правила, на которое ссылаются
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BNFReference.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:ModelTransformationComponent.BNFReference.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BNFReference.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ModelTransformationComponent.BNFSimpleElement">
            <summary>
            Простой элемент <see cref="T:ModelTransformationComponent.BasicBNFRule"/>
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.BNFString">
            <summary>
            Строка в БНФ
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.BNFSimpleElement"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.BNFString.Value">
            <summary>
            Строковое значение
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BNFString.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BNFString.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BNFString.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:ModelTransformationComponent.BNFSystemRef">
            <summary>
            Ссылка на системное правило
            <para>Наследует <see cref="T:ModelTransformationComponent.BNFSimpleElement"/></para>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.BNFSystemRef.rule">
            <summary>
            Системное правило, на которое ссылается данный оюъект
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BNFSystemRef.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BNFSystemRef.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.BNFSystemRef.#ctor(ModelTransformationComponent.SystemRule)">
            <summary>
            
            </summary>
            <param name="systemRule"></param>
        </member>
        <member name="T:ModelTransformationComponent.IBannableRule">
            <summary>
            Интерфейс правил, которые могут быть запрещены для использования в выходных правил
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.IBannableRule.Banned">
            <summary>
            Запрещено ли использование данного правила
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.NamedRule">
            <summary>
            Конструкция с названием
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.Rule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.NamedRule.Name">
            <summary>
            Название конструкции
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NamedRule.#ctor(System.String)">
            <summary>
            Конструкция с названием
            </summary>
            <param name="name">Название конструкции</param>
        </member>
        <member name="T:ModelTransformationComponent.RegexRule">
            <summary>
            Конструкция с представлением в виде регулярного выражения
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.NamedRule"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.RegexRule.regex">
            <summary>
            Объект регулярного выражения
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.RegexRule.Pattern">
            <summary>
            Регулярное выражение
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.RegexRule.Banned">
            <summary>
            Проверка, является ли данный паттерн запрещённым для правил вывода
            </summary>
            <value></value>
        </member>
        <member name="M:ModelTransformationComponent.RegexRule.#ctor(System.String,System.String)">
            <summary>
            Конструкция с представлением в виде регулярного выражения
            </summary>
            <param name="pattern">Регулярное выражение</param>
            <param name="name">Название конструкции</param>
        </member>
        <member name="M:ModelTransformationComponent.RegexRule.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ModelTransformationComponent.Rule">
            <summary>
            Класс конструкции
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRule">
            <summary>
            Cистемная конструкция
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.Rule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRule.Literal">
            <summary>
            Литерал конструкции
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SystemRule.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Add_tab">
            <summary>
            Системная конструкция увеличения счётчика табов
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Add_tab.Literal">
            <summary>
            Литерал конструкции увеличения счётчика табов
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SystemRules.Add_tab.ChangeState(ModelTransformationComponent.GeneratorState@)">
            <summary>
            
            </summary>
            <param name="generatorState"></param>
        </member>
        <member name="M:ModelTransformationComponent.SystemRules.Add_tab.ChangeState(ModelTransformationComponent.ParserState@)">
            <summary>
            
            </summary>
            <param name="parserState"></param>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Child">
            <summary>
            Системная конструкция потомка. Используется в <see cref="T:ModelTransformationComponent.SystemRules.TypeDef"/>
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Child.Literal">
            <summary>
            Литерал конструкции потомка
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Del_tab">
            <summary>
            Системная конструкция уменьшения счётчика табов
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Del_tab.Literal">
            <summary>
            Литерал конструкции уменьшения счётчика табов
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SystemRules.Del_tab.ChangeState(ModelTransformationComponent.GeneratorState@)">
            <summary>
            
            </summary>
            <param name="generatorState"></param>
        </member>
        <member name="M:ModelTransformationComponent.SystemRules.Del_tab.ChangeState(ModelTransformationComponent.ParserState@)">
            <summary>
            
            </summary>
            <param name="parserState"></param>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Empty">
            <summary>
            Системная конструкция пустой символ
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Empty.Literal">
            <summary>
            Литерал конструкции пустой символ
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SystemRules.Empty.ChangeState(ModelTransformationComponent.GeneratorState@)">
            <summary>
            
            </summary>
            <param name="generatorState"></param>
        </member>
        <member name="M:ModelTransformationComponent.SystemRules.Empty.ChangeState(ModelTransformationComponent.ParserState@)">
            <summary>
            
            </summary>
            <param name="parserState"></param>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.New_line">
            <summary>
            Системная конструкиция новая строка
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.New_line.Literal">
            <summary>
            Литерал конструкции новая строка
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SystemRules.New_line.ChangeState(ModelTransformationComponent.GeneratorState@)">
            <summary>
            
            </summary>
            <param name="generatorState"></param>
        </member>
        <member name="M:ModelTransformationComponent.SystemRules.New_line.ChangeState(ModelTransformationComponent.ParserState@)">
            <summary>
            
            </summary>
            <param name="parserState"></param>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Space">
            <summary>
            Системная конструкиция пробел
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Space.Literal">
            <summary>
            Литерал конструкции пробел
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SystemRules.Space.ChangeState(ModelTransformationComponent.GeneratorState@)">
            <summary>
            
            </summary>
            <param name="generatorState"></param>
        </member>
        <member name="M:ModelTransformationComponent.SystemRules.Space.ChangeState(ModelTransformationComponent.ParserState@)">
            <summary>
            
            </summary>
            <param name="parserState"></param>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Comment">
            <summary>
            Системная конструкция однострочного комментария
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Comment.Literal">
            <summary>
            Литерал конструкции однострочного комментария
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.End">
            <summary>
            Системная консрукция окончания описания трансляции
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.End.Literal">
            <summary>
            Литерал конструкции окончания описания трансляции
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Language_end">
            <summary>
            Системная конструкция окончания описания языка
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Language_end.Literal">
            <summary>
            Литерал конструкции окончания описания языка
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Language_start">
            <summary>
            Системная конструкция начала описания языка
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Language_start.Literal">
            <summary>
            Литерал конструкции начала описания языка
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Params_end">
            <summary>
            Системная конструкция окончания описания параметров
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Params_end.Literal">
            <summary>
            Литерал конструкции окончания описания параметров
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Params_start">
            <summary>
            Системная конструкция начала описания параметров
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Params_start.Literal">
            <summary>
            Литерал конструкции начала описания параметров
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Presentation">
            <summary>
            Системная конструкция задания представления
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Presentation.Literal">
            <summary>
            Литерал конструкции задания представления
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Reg">
            <summary>
            Системная конструкция создания конструкции на основе регулярного выражения
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Reg.Literal">
            <summary>
            Литерао конструкции создания конструкции на основе регулярного выражения
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Start">
            <summary>
            Системная конструкция начала описания трансформаций
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Start.Literal">
            <summary>
            Литерал конструкции начала описания трансформаций
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Translate_rules_end">
            <summary>
            Системная конструкция окончания описания дополнительных правил трансформации
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Translate_rules_end.Literal">
            <summary>
            Литерал конструкции окончания описания дополнительных правил трансформации
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.Translate_rules_start">
            <summary>
            Системная конструкция начала описания дополнительных правил трансформации
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.Translate_rules_start.Literal">
            <summary>
            Литерал конструкции начала описания дополнительных правил трансформации
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.TypeDef">
            <summary>
            Системная конструкция создания конструкции типа
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.TypeDef.Literal">
            <summary>
            Литерал конструкции создания конструкции типа
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRules.TypeEx">
            <summary>
            Системная конструкция создания конструкции, реализующий тип
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.SystemRules.TypeEx.Literal">
            <summary>
            Литерал конструкции создания конструкции, реализующий тип
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.TypeRule">
            <summary>
            Правило типа
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.TypeRule.RefList">
            <summary>
            Список ссылок на экземпляры
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TypeRule.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name">Название правила</param>
        </member>
        <member name="M:ModelTransformationComponent.TypeRule.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.TypeRule.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:ModelTransformationComponent.TransformationComponent">
            <summary>
            Компонент трасформации моделей
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.TransformationComponent"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.Transform(System.String,System.String,System.String,System.String)">
            <summary>
            Функция трансформации моделей
            </summary>
            <param name="text">Текстовое представление исходной модели</param>
            <param name="rules">Текстовое представление правил трансформации</param>
            <param name="sourceLang">Название исходного языка</param>
            <param name="targetLang">Название целевого языка</param>
            <returns>Результат трансформации - новое текстовое представление</returns>
            <exception cref="T:ModelTransformationComponent.NoLanguageRulesFound">
            Вызывается при отсутствии определения языка
            </exception>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.TransformToRules(System.String,System.Boolean)">
            <summary>
            Получение всех структур языков
            </summary>
            <param name="rules">Текстовое представление структур</param>
            <param name="Minimize"></param>
            <returns>Все структуры языков</returns>
            <exception cref="T:ModelTransformationComponent.InputIsEmpty">
            Вызывается при отсутствии входного текста
            </exception>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.GetBaseDescription(System.String,System.Int32@)">
            <summary>
            Получить базовые структуры 
            </summary>
            <param name="text">Текстовое описание базовых структур</param>
            <param name="line_end">Номер последней строки</param>
            <returns>Базовые структуры</returns>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.GetLangDescription(System.String,System.Collections.Generic.Dictionary{System.String,ModelTransformationComponent.Rule},System.String,System.Int32,System.Int32@)">
            <summary>
            Получить структуры языка 
            </summary>
            <param name="text">Текстовое описание структур языка</param>
            <param name="baseDescription">Базовые структуры</param>
            <param name="LangName">Название языка</param>
            <param name="line"></param>
            <param name="line_end"></param>
            <returns>Структуры данного языка</returns>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.Transform(System.String,ModelTransformationComponent.AllRules,System.String,System.String)">
            <summary>
            Получить текстовое представление модели в целевом языке
            </summary>
            <param name="text">Текстовое представление модели в исходном языке</param>
            <param name="rules">Все правила языков</param>
            <param name="sourceLang">Название исходного языка</param>
            <param name="targetLang">Название целевого языка</param>
            <returns>Текстовое представление модели в целевом языке</returns>
            <exception cref="T:ModelTransformationComponent.NoLanguageRulesFound">
            Вызывается при отсутствии определения языка
            </exception>
            <exception cref="T:ModelTransformationComponent.InputIsEmpty">
            Вызывается при отсутствии входного текста
            </exception>
        </member>
    </members>
</doc>
