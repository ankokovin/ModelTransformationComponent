<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TransformationComponent</name>
    </assembly>
    <members>
        <member name="T:ModelTransformationComponent.AllRules">
            <summary>
            Все структуры
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.AllRules.rulesPerLanguage">
            <summary>
            Структуры хранятся следующим образом:
            Имя языка : Словарь структур данного языка
            Название структуры : Структура
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.AllRules.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.AllRules"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.AllRules.BaseName">
            <summary>
            Название под базовые правила
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.AllRules.AddLanguageRules(System.String,System.Collections.Generic.Dictionary{System.String,ModelTransformationComponent.Rule})">
            <summary>
            Добавление структур нового языка
            </summary>
            <param name="LanguageName">Название языка</param>
            <param name="LanguageRules">Словарь структур</param>
        </member>
        <member name="M:ModelTransformationComponent.AllRules.AddBaseRules(System.Collections.Generic.Dictionary{System.String,ModelTransformationComponent.Rule})">
            <summary>
            Добавление базовых структур
            </summary>
            <param name="Rules">Словарь базовых структур</param>
        </member>
        <member name="M:ModelTransformationComponent.AllRules.HasLanguage(System.String)">
            <summary>
            Проверка наличия описания языка
            </summary>
            <param name="name">Название языка</param>
            <returns>Есть ли описание данного языка</returns>
        </member>
        <member name="M:ModelTransformationComponent.AllRules.GetRulesForLanguage(System.String)">
            <summary>
            Получение структур для конкретного языка
            </summary>
            <param name="LanguageName">Название языка</param>
            <returns>Словарь структур для данного языка</returns>
        </member>
        <member name="P:ModelTransformationComponent.AllRules.GetBaseRules">
            <summary>
            Получение базовых структур
            </summary>
            <returns>Словарь базовых структур</returns>
        </member>
        <member name="P:ModelTransformationComponent.AllRules.GetLanguages">
            <summary>
            Получение списка введённых языков
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.NoLanguageRulesFound">
            <summary>
            Исключение: не было найдено описание трансформаций для языка
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NoLanguageRulesFound.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoLanguageRulesFound"/>
            </summary>
            <param name="LanguageName">Название языка</param>
        </member>
        <member name="T:ModelTransformationComponent.EOSException">
            <summary>
            Ошибка: неожиданный конец входной строки <para/>
            Наследует <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.EOSException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.EOSException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.EOSException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.EOSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.InputIsEmpty">
            <summary>
            Исключение, возникающее когда входная строка пуста
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.InputIsEmpty.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.InputIsEmpty"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.InputIsEmpty.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.InputIsEmpty"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.InputIsEmpty.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.InputIsEmpty"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="T:ModelTransformationComponent.NameSyntaxError">
            <summary>
            Ошибка в названии структуры
            <para/>
            Подвид синтаксической ошибки <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.NameSyntaxError.FormatString">
            <summary>
            Строка формата сообщения ошибки по-умолчанию
            </summary>
            <value>
            "[{0},{1}] Синтаксическая ошибка: ожидалось валидное имя, а получили \"{2}\""
            </value>
        </member>
        <member name="M:ModelTransformationComponent.NameSyntaxError.#ctor(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Ошибка в названии структуры
            </summary>
            <param name="line">Номер строки</param>
            <param name="symbol">Номер символа</param>
            <param name="got">Полученная строка</param>
            <param name="formatString">Строка формата сообщения об ошибке</param>
        </member>
        <member name="M:ModelTransformationComponent.NameSyntaxError.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Ошибка в названии структуры
            </summary>
            <param name="line">Номер строки</param>
            <param name="symbol">Номер символа</param>
            <param name="got">Полученная строка</param>
        </member>
        <member name="M:ModelTransformationComponent.NameSyntaxError.#ctor(System.String)">
            <summary>
            Ошибка в названии структуры
            </summary>
            <param name="got">Полученная строка</param>
        </member>
        <member name="T:ModelTransformationComponent.NoEndDetected">
            <summary>
            Исключение: не был найден символ /end
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.EOSException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NoEndDetected.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoEndDetected"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NoEndDetected.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoEndDetected"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.NoEndDetected.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoEndDetected"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.NoEndDetected.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoEndDetected"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.NoStartDetected">
            <summary>
            Исключение: не был найден символ /start
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NoStartDetected.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.NoStartDetected"/>
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SyntaxError">
            <summary>
            Синтаксическая ошибка
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxError.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxError.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="innerException">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxError.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxError.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxError.#ctor(System.String,System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
            <param name="expected">Ожидаемая строка</param>
            <param name="got">Полученная строка</param>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxError.Got">
            <summary>
            Полученная информация
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxError.Expected">
            <summary>
            Ожидаемая информация
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SyntaxErrorPlaced">
            <summary>
            Синтаксическая ошибка с указанием номера строки и номера символа
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SyntaxError"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxErrorPlaced.FormatString">
            <summary>
            Строка формата сообщения ошибки по-умолчанию
            </summary>
            <value>
            [{0},{1}] Синтаксическая ошибка: ожидалось \"{2}\", а получили \"{3}\"
            </value>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxErrorPlaced.TrimedMsg">
            <summary>
            Сообщение об ошибке без указания номера строки с символа
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="line">Номер строки</param>
            <param name="symbol">Номер символа</param>
            <param name="got">Полученная строка</param>
            <param name="expected">Ожидаемая строка</param>
            <param name="formatString">Строка формата сообщения ошибки</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="line">Номер строки</param>
            <param name="symbol">Номер символа</param>
            <param name="got">Полученная строка</param>
            <param name="expected">Ожидаемая строка</param>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxErrorPlaced.Line">
            <summary>
            Номер строки
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.SyntaxErrorPlaced.Symbol">
            <summary>
            Номер символа
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.String,System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="got">Полученная строка</param>
            <param name="expected">Ожидаемая строка</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.SyntaxErrorPlaced.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.SyntaxErrorPlaced"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.BaseRuleParseException">
            <summary>
            Ошибка парсинга основных правил трансформаций в <see cref="M:ModelTransformationComponent.TransformationComponent.GetBaseDescription(System.String)"/>
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BaseRuleParseException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.BaseRuleParseException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.BaseRuleParseException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.BaseRuleParseException"/>
            </summary>
            <param name="message">Сообшение</param>
        </member>
        <member name="M:ModelTransformationComponent.BaseRuleParseException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.BaseRuleParseException"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.BaseRuleParseException.#ctor(System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.BaseRuleParseException"/>
            </summary>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.BaseRuleParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.BaseRuleParseException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.LangRuleParseException">
            <summary>
            Ошибка парсинга правил трансформаций конкретного языка в <see cref="M:ModelTransformationComponent.TransformationComponent.GetLangDescription(System.String,System.Collections.Generic.Dictionary{System.String,ModelTransformationComponent.Rule},System.String@)"/>
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.LangRuleParseException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.LangRuleParseException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.LangRuleParseException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.LangRuleParseException"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.LangRuleParseException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.LangRuleParseException"/>
            </summary>
            <param name="langName">Название языка</param>
            <param name="inner">Внутреняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.LangRuleParseException.#ctor(System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.LangRuleParseException"/>
            </summary>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.LangRuleParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.LangRuleParseException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.ModelParseException">
            <summary>
            Ошибка парсинга модели в <see cref="M:ModelTransformationComponent.TransformationComponent.Transform(System.String,ModelTransformationComponent.AllRules,System.String,System.String)"/>
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.ModelParseException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.ModelParseException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.ModelParseException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.ModelParseException"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.ModelParseException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.ModelParseException"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.ModelParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.ModelParseException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.RuleParseException">
            <summary>
            Ошибка парсинга правил трансформаций в <see cref="M:ModelTransformationComponent.TransformationComponent.TransformToRules(System.String)"/>
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.RuleParseException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.RuleParseException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.RuleParseException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.RuleParseException"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.RuleParseException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.RuleParseException"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.RuleParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.RuleParseException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.TransformComponentException">
            <summary>
            Класс исключений, генерируемых компонентом трансформации моделей <see cref="T:ModelTransformationComponent.TransformationComponent"/>
            <para/>
            Наследует <see cref="T:System.Exception"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TransformComponentException.#ctor">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TransformComponentException.#ctor(System.String)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:ModelTransformationComponent.TransformComponentException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
            <param name="message">Сообщение</param>
            <param name="inner">Внутренняя ошибка</param>
        </member>
        <member name="M:ModelTransformationComponent.TransformComponentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор <see cref="T:ModelTransformationComponent.TransformComponentException"/>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ModelTransformationComponent.ITransformationComponent">
            <summary>
            Интрефейс компонента трансформации моделей
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.ITransformationComponent.Transform(System.String,System.String,System.String,System.String)">
            <summary>
            Функция трансформации моделей
            </summary>
            <param name="text">Текстовое представление исходной модели</param>
            <param name="rules">Текстовое представление правил трансформации</param>
            <param name="sourceLang">Название исходного языка</param>
            <param name="targetLang">Название целевого языка</param>
            <returns>Результат трансформации - новое текстовое представление</returns>
        </member>
        <member name="M:ModelTransformationComponent.ITransformationComponent.TransformToRules(System.String)">
            <summary>
            
            </summary>
            <param name="rules"></param>
            <returns></returns>
        </member>
        <member name="M:ModelTransformationComponent.ITransformationComponent.Transform(System.String,ModelTransformationComponent.AllRules,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="rules"></param>
            <param name="sourceLang"></param>
            <param name="targetLang"></param>
            <returns></returns>
        </member>
        <member name="T:ModelTransformationComponent.AbstractRuleFactory">
            <summary>
            Абстрактная фабрика конструкций
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.AbstractRuleFactory.CreateRule(System.String)">
            <summary>
            Создание конструкции
            </summary>
            <param name="text">Текстовое описание конструкции</param>
            <returns>Конструкция</returns>
        </member>
        <member name="T:ModelTransformationComponent.RegRuleFactory">
            <summary>
            Конкретная фабрика структур с представлением в виде регулярных выражений
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.AbstractRuleFactory"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.RegRuleFactory.CreateRule(System.String)">
            <summary>
            Метод создания структуры с регулярным выражением
            </summary>
            <param name="text">Текстовое представление структуры</param>        
            <exception cref="T:System.ArgumentException">Неожиданная строка</exception>
            <exception cref="T:ModelTransformationComponent.SyntaxError">Синтаксическая ошибка</exception>
            <returns>Структура с представлением в виде регулярного выражения</returns>
        </member>
        <member name="T:ModelTransformationComponent.SystemRuleFactory">
            <summary>
            Конкретная фабрика системных конструкций
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.AbstractRuleFactory"/>
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.SystemRuleFactory.CreateRule(System.String)">
            <summary>
            Создание системной конструкции
            </summary>
            <param name="text">Текстовое описание конструкции</param>
            <returns>Системная конструкция</returns>
        </member>
        <member name="T:ModelTransformationComponent.NamedRule">
            <summary>
            Конструкция с названием
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.Rule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.NamedRule.GetName">
            <summary>
            Название конструкции
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.NamedRule.#ctor(System.String)">
            <summary>
            Конструкция с названием
            </summary>
            <param name="name">Название конструкции</param>
        </member>
        <member name="T:ModelTransformationComponent.RegexRule">
            <summary>
            Конструкция с представлением в виде регулярного выражения
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.NamedRule"/>
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.RegexRule.regex">
            <summary>
            Объект регулярного выражения
            </summary>
        </member>
        <member name="F:ModelTransformationComponent.RegexRule.pattern">
            <summary>
            Регулярное выражение
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.RegexRule.#ctor(System.String,System.String)">
            <summary>
            Конструкция с представлением в виде регулярного выражения
            </summary>
            <param name="pattern">Регулярное выражение</param>
            <param name="name">Название конструкции</param>
        </member>
        <member name="T:ModelTransformationComponent.Rule">
            <summary>
            Класс конструкции
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.SystemRule">
            <summary>
            Системная конструкция
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.Rule"/>
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Add_tab">
            <summary>
            Системная конструкция увеличения счётчика табов
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Add_tab.GetLiteral">
            <summary>
            Литерал конструкции увеличения счётчика табов
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Child">
            <summary>
            Системная конструкция потомка. Используется в <see cref="T:ModelTransformationComponent.Type"/>
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Child.GetLiteral">
            <summary>
            Литерал конструкции потомка
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Del_tab">
            <summary>
            Системная конструкция уменьшения счётчика табов
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Del_tab.GetLiteral">
            <summary>
            Литерал конструкции уменьшения счётчика табов
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Empty">
            <summary>
            Системная конструкция пустой символ
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Empty.GetLiteral">
            <summary>
            Литерал конструкции пустой символ
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Space">
            <summary>
            Системная конструкиция пробел
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Space.GetLiteral">
            <summary>
            Литерал конструкции пробел
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Comment">
            <summary>
            Системная конструкция однострочного комментария
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Comment.GetLiteral">
            <summary>
            Литерал конструкции однострочного комментария
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.End">
            <summary>
            Системная консрукция окончания описания трансляции
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.End.GetLiteral">
            <summary>
            Литерал конструкции окончания описания трансляции
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Language_end">
            <summary>
            Системная конструкция окончания описания языка
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Language_end.GetLiteral">
            <summary>
            Литерал конструкции окончания описания языка
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Language_start">
            <summary>
            Системная конструкция начала описания языка
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Language_start.GetLiteral">
            <summary>
            Литерал конструкции начала описания языка
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Params_end">
            <summary>
            Системная конструкция окончания описания параметров
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Params_end.GetLiteral">
            <summary>
            Литерал конструкции окончания описания параметров
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Params_start">
            <summary>
            Системная конструкция начала описания параметров
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Params_start.GetLiteral">
            <summary>
            Литерал конструкции начала описания параметров
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Presentation">
            <summary>
            Системная конструкция задания представления
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Presentation.GetLiteral">
            <summary>
            Литерал конструкции задания представления
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Reg">
            <summary>
            Системная конструкция создания конструкции на основе регулярного выражения
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Reg.GetLiteral">
            <summary>
            Литерао конструкции создания конструкции на основе регулярного выражения
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Start">
            <summary>
            Системная конструкция начала описания трансформаций
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Start.GetLiteral">
            <summary>
            Литерал конструкции начала описания трансформаций
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Translate_rules_end">
            <summary>
            Системная конструкция окончания описания дополнительных правил трансформации
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Translate_rules_end.GetLiteral">
            <summary>
            Литерал конструкции окончания описания дополнительных правил трансформации
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Translate_rules_start">
            <summary>
            Системная конструкция начала описания дополнительных правил трансформации
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Translate_rules_start.GetLiteral">
            <summary>
            Литерал конструкции начала описания дополнительных правил трансформации
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.Type">
            <summary>
            Системная конструкция создания конструкции типа
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.Type.GetLiteral">
            <summary>
            Литерал конструкции создания конструкции типа
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.TypeEx">
            <summary>
            Системная конструкция создания конструкции, реализующий тип
            <para/>
            Наследует <see cref="T:ModelTransformationComponent.SystemRule"/>
            </summary>
        </member>
        <member name="P:ModelTransformationComponent.TypeEx.GetLiteral">
            <summary>
            Литерал конструкции создания конструкции, реализующий тип
            </summary>
        </member>
        <member name="T:ModelTransformationComponent.TransformationComponent">
            <summary>
            Компонент трасформации моделей
            </summary>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.Transform(System.String,System.String,System.String,System.String)">
            <summary>
            Функция трансформации моделей
            </summary>
            <param name="text">Текстовое представление исходной модели</param>
            <param name="rules">Текстовое представление правил трансформации</param>
            <param name="sourceLang">Название исходного языка</param>
            <param name="targetLang">Название целевого языка</param>
            <returns>Результат трансформации - новое текстовое представление</returns>
            <exception cref="T:ModelTransformationComponent.NoLanguageRulesFound">
            Вызывается при отсутствии определения языка
            </exception>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.TransformToRules(System.String)">
            <summary>
            Получение всех структур языков
            </summary>
            <param name="rules">Текстовое представление структур</param>
            <returns>Все структуры языков</returns>
            <exception cref="T:ModelTransformationComponent.InputIsEmpty">
            Вызывается при отсутствии входного текста
            </exception>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.GetBaseDescription(System.String)">
            <summary>
            Получить базовые структуры 
            </summary>
            <param name="text">Текстовое описание базовых структур</param>
            <returns>Базовые структуры</returns>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.GetLangDescription(System.String,System.Collections.Generic.Dictionary{System.String,ModelTransformationComponent.Rule},System.String@)">
            <summary>
            Получить структуры языка 
            </summary>
            <param name="text">Текстовое описание структур языка</param>
            <param name="baseDescription">Базовые структуры</param>
            <param name="LangName">Название языка</param>
            <returns>Структуры данного языка</returns>
        </member>
        <member name="M:ModelTransformationComponent.TransformationComponent.Transform(System.String,ModelTransformationComponent.AllRules,System.String,System.String)">
            <summary>
            Получить текстовое представление модели в целевом языке
            </summary>
            <param name="text">Текстовое представление модели в исходном языке</param>
            <param name="rules">Все правила языков</param>
            <param name="sourceLang">Название исходного языка</param>
            <param name="targetLang">Название целевого языка</param>
            <returns>Текстовое представление модели в целевом языке</returns>
            <exception cref="T:ModelTransformationComponent.NoLanguageRulesFound">
            Вызывается при отсутствии определения языка
            </exception>
            <exception cref="T:ModelTransformationComponent.InputIsEmpty">
            Вызывается при отсутствии входного текста
            </exception>
        </member>
    </members>
</doc>
